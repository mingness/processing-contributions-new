name: Issue to Pull Request
on:
  issues:
    types:
      - opened
      - edited
      - reopened
permissions:
  contents: write
  issues: write
  pull-requests: write

env:
  BRANCH_NAME: issue-${{ github.event.issue.number }}
  ISSUE_NUM: ${{ github.event.issue.number }}

jobs:
  validate:
    runs-on: ubuntu-latest
    outputs:
      props: ${{ steps.parseProps.outputs.props }}
    steps:
      - name: Parse issue
        id: parseIssue
        uses: onmax/issue-form-parser@v1.5
        with:
          issue_number: $ISSUE_NUM

      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.x

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Read and validate properties txt file
        id: parseProps
        run: python -u scripts/parse_and_validate_properties_txt.py "${{ fromJson(steps.parseIssue.outputs.payload).url }}"
  create-pr:
    needs: validate
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Show output
        run: |
          echo props: ${{ needs.validate.outputs.props }}

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.x

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: set github profile
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          git config --global user.name 'Github workflow'
          git config --global user.email 'github-workflow@users.noreply.github.com'
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/$GITHUB_REPOSITORY

      - name: check if target branch exists
        id: branchExists
        run: git branch | grep $BRANCH_NAME

      - name: delete target branch if exists
        if: branchExists
        run: git branch -D $BRANCH_NAME

      - name: create branch
        env:
          GH_TOKEN: ${{ github.token }}
        run: gh issue develop $ISSUE_NUM --name $BRANCH_NAME --checkout

      - name: edit database
        run: |
          cd scripts
          python add_new_contribution_to_yaml.py '${{ needs.validate.outputs.props }}'

      - name: commit changes
        run: |
          git add -u
          git commit -m "new contribution added"
          git push

      - name: Create pull request
        run: gh pr create -B main -H $BRANCH_NAME --title "new contribution issue $ISSUE_NUM" --body "${{github.event.issue.title }}"
        env:
          GH_TOKEN: ${{ github.token }}
